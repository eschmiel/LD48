// Generated by Haxe 4.1.5
#ifndef INCLUDED_Crop
#define INCLUDED_Crop

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_882545e7ab594419_16_new)
HX_DECLARE_CLASS0(Crop)
HX_DECLARE_CLASS0(CropQuality)
HX_DECLARE_CLASS0(CropType)



class HXCPP_CLASS_ATTRIBUTES Crop_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Crop_obj OBJ_;
		Crop_obj();

	public:
		enum { _hx_ClassId = 0x00f323d4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Crop")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Crop"); }

		inline static ::hx::ObjectPtr< Crop_obj > __new() {
			::hx::ObjectPtr< Crop_obj > __this = new Crop_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Crop_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Crop_obj *__this = (Crop_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Crop_obj), true, "Crop"));
			*(void **)__this = Crop_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_882545e7ab594419_16_new)
HXLINE(  27)		( ( ::Crop)(__this) )->days = 0;
HXLINE(  26)		( ( ::Crop)(__this) )->hp = 0;
HXLINE(  25)		( ( ::Crop)(__this) )->maxHp = 0;
HXLINE(  23)		( ( ::Crop)(__this) )->watered = false;
HXLINE(  22)		( ( ::Crop)(__this) )->pickable = false;
HXLINE(  21)		( ( ::Crop)(__this) )->active = false;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Crop_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Crop",b0,2d,a0,2c); }

		 ::CropType type;
		::String graphic;
		bool active;
		bool pickable;
		bool watered;
		int maxHp;
		int hp;
		int days;
		int dayOfMaturity;
		int dayOfDecline;
		 ::CropQuality quality;
		void water();
		::Dynamic water_dyn();

		::String update();
		::Dynamic update_dyn();

};


#endif /* INCLUDED_Crop */ 
