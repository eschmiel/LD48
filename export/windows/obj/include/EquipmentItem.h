// Generated by Haxe 4.1.5
#ifndef INCLUDED_EquipmentItem
#define INCLUDED_EquipmentItem

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Equipment)
HX_DECLARE_CLASS0(EquipmentItem)
HX_DECLARE_CLASS0(EquipmentType)



class HXCPP_CLASS_ATTRIBUTES EquipmentItem_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef EquipmentItem_obj OBJ_;
		EquipmentItem_obj();

	public:
		enum { _hx_ClassId = 0x7540c9a1 };

		void __construct( ::Equipment equipment, ::Dynamic __o_startingQuantity);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="EquipmentItem")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"EquipmentItem"); }
		static ::hx::ObjectPtr< EquipmentItem_obj > __new( ::Equipment equipment, ::Dynamic __o_startingQuantity);
		static ::hx::ObjectPtr< EquipmentItem_obj > __alloc(::hx::Ctx *_hx_ctx, ::Equipment equipment, ::Dynamic __o_startingQuantity);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EquipmentItem_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EquipmentItem",61,b4,f9,98); }

		::String name;
		::String graphic;
		int quantity;
		 ::EquipmentType type;
		void add(int x);
		::Dynamic add_dyn();

		void remove(int x);
		::Dynamic remove_dyn();

		 ::EquipmentType getType();
		::Dynamic getType_dyn();

		int getQuantity();
		::Dynamic getQuantity_dyn();

};


#endif /* INCLUDED_EquipmentItem */ 
