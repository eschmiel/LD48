// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Equipment
#include <Equipment.h>
#endif
#ifndef INCLUDED_EquipmentItem
#include <EquipmentItem.h>
#endif
#ifndef INCLUDED_EquipmentType
#include <EquipmentType.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b6a6e3c24e5eaa73_24_new,"EquipmentItem","new",0x227d99d3,"EquipmentItem.new","EquipmentItem.hx",24,0xc34fc0fd)
HX_LOCAL_STACK_FRAME(_hx_pos_b6a6e3c24e5eaa73_45_add,"EquipmentItem","add",0x2273bb94,"EquipmentItem.add","EquipmentItem.hx",45,0xc34fc0fd)
HX_LOCAL_STACK_FRAME(_hx_pos_b6a6e3c24e5eaa73_51_remove,"EquipmentItem","remove",0x09e5fcb1,"EquipmentItem.remove","EquipmentItem.hx",51,0xc34fc0fd)
HX_LOCAL_STACK_FRAME(_hx_pos_b6a6e3c24e5eaa73_56_getType,"EquipmentItem","getType",0xcbe2a163,"EquipmentItem.getType","EquipmentItem.hx",56,0xc34fc0fd)
HX_LOCAL_STACK_FRAME(_hx_pos_b6a6e3c24e5eaa73_61_getQuantity,"EquipmentItem","getQuantity",0x1342feb4,"EquipmentItem.getQuantity","EquipmentItem.hx",61,0xc34fc0fd)

void EquipmentItem_obj::__construct( ::Equipment equipment, ::Dynamic __o_startingQuantity){
            		 ::Dynamic startingQuantity = __o_startingQuantity;
            		if (::hx::IsNull(__o_startingQuantity)) startingQuantity = 1;
            	HX_STACKFRAME(&_hx_pos_b6a6e3c24e5eaa73_24_new)
HXDLIN(  24)		switch((int)(equipment->_hx_getIndex())){
            			case (int)0: {
HXLINE(  28)				this->graphic = HX_("assets/images/rock.png",0b,b2,62,8e);
HXLINE(  29)				this->name = HX_("Hoe",5e,03,37,00);
HXLINE(  30)				this->type = ::EquipmentType_obj::GEAR_dyn();
HXLINE(  31)				this->quantity = 1;
            			}
            			break;
            			case (int)1: {
HXLINE(  35)				this->graphic = HX_("assets/images/carrot.png",a9,08,fc,c1);
HXLINE(  36)				this->name = HX_("Seeds",c2,ad,51,0d);
HXLINE(  37)				this->type = ::EquipmentType_obj::SEEDS_dyn();
HXLINE(  38)				this->quantity = ( (int)(startingQuantity) );
            			}
            			break;
            		}
            	}

Dynamic EquipmentItem_obj::__CreateEmpty() { return new EquipmentItem_obj; }

void *EquipmentItem_obj::_hx_vtable = 0;

Dynamic EquipmentItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< EquipmentItem_obj > _hx_result = new EquipmentItem_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool EquipmentItem_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7540c9a1;
}

void EquipmentItem_obj::add(int x){
            	HX_STACKFRAME(&_hx_pos_b6a6e3c24e5eaa73_45_add)
HXDLIN(  45)		if (::hx::IsEq( this->type,::EquipmentType_obj::SEEDS_dyn() )) {
HXLINE(  46)			 ::EquipmentItem _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  46)			_hx_tmp->quantity = (_hx_tmp->quantity + x);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(EquipmentItem_obj,add,(void))

void EquipmentItem_obj::remove(int x){
            	HX_STACKFRAME(&_hx_pos_b6a6e3c24e5eaa73_51_remove)
HXDLIN(  51)		 ::EquipmentItem _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  51)		_hx_tmp->quantity = (_hx_tmp->quantity - x);
            	}


HX_DEFINE_DYNAMIC_FUNC1(EquipmentItem_obj,remove,(void))

 ::EquipmentType EquipmentItem_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_b6a6e3c24e5eaa73_56_getType)
HXDLIN(  56)		return this->type;
            	}


HX_DEFINE_DYNAMIC_FUNC0(EquipmentItem_obj,getType,return )

int EquipmentItem_obj::getQuantity(){
            	HX_STACKFRAME(&_hx_pos_b6a6e3c24e5eaa73_61_getQuantity)
HXDLIN(  61)		return this->quantity;
            	}


HX_DEFINE_DYNAMIC_FUNC0(EquipmentItem_obj,getQuantity,return )


::hx::ObjectPtr< EquipmentItem_obj > EquipmentItem_obj::__new( ::Equipment equipment, ::Dynamic __o_startingQuantity) {
	::hx::ObjectPtr< EquipmentItem_obj > __this = new EquipmentItem_obj();
	__this->__construct(equipment,__o_startingQuantity);
	return __this;
}

::hx::ObjectPtr< EquipmentItem_obj > EquipmentItem_obj::__alloc(::hx::Ctx *_hx_ctx, ::Equipment equipment, ::Dynamic __o_startingQuantity) {
	EquipmentItem_obj *__this = (EquipmentItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(EquipmentItem_obj), true, "EquipmentItem"));
	*(void **)__this = EquipmentItem_obj::_hx_vtable;
	__this->__construct(equipment,__o_startingQuantity);
	return __this;
}

EquipmentItem_obj::EquipmentItem_obj()
{
}

void EquipmentItem_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(EquipmentItem);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(graphic,"graphic");
	HX_MARK_MEMBER_NAME(quantity,"quantity");
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_END_CLASS();
}

void EquipmentItem_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(graphic,"graphic");
	HX_VISIT_MEMBER_NAME(quantity,"quantity");
	HX_VISIT_MEMBER_NAME(type,"type");
}

::hx::Val EquipmentItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return ::hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"type") ) { return ::hx::Val( type ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return ::hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"graphic") ) { return ::hx::Val( graphic ); }
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"quantity") ) { return ::hx::Val( quantity ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getQuantity") ) { return ::hx::Val( getQuantity_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val EquipmentItem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast<  ::EquipmentType >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"graphic") ) { graphic=inValue.Cast< ::String >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"quantity") ) { quantity=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void EquipmentItem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("graphic",a8,5a,07,74));
	outFields->push(HX_("quantity",8b,47,42,ac));
	outFields->push(HX_("type",ba,f2,08,4d));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo EquipmentItem_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(EquipmentItem_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsString,(int)offsetof(EquipmentItem_obj,graphic),HX_("graphic",a8,5a,07,74)},
	{::hx::fsInt,(int)offsetof(EquipmentItem_obj,quantity),HX_("quantity",8b,47,42,ac)},
	{::hx::fsObject /*  ::EquipmentType */ ,(int)offsetof(EquipmentItem_obj,type),HX_("type",ba,f2,08,4d)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *EquipmentItem_obj_sStaticStorageInfo = 0;
#endif

static ::String EquipmentItem_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("graphic",a8,5a,07,74),
	HX_("quantity",8b,47,42,ac),
	HX_("type",ba,f2,08,4d),
	HX_("add",21,f2,49,00),
	HX_("remove",44,9c,88,04),
	HX_("getType",70,a2,8b,1f),
	HX_("getQuantity",41,0a,36,d2),
	::String(null()) };

::hx::Class EquipmentItem_obj::__mClass;

void EquipmentItem_obj::__register()
{
	EquipmentItem_obj _hx_dummy;
	EquipmentItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("EquipmentItem",61,b4,f9,98);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(EquipmentItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< EquipmentItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EquipmentItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EquipmentItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

