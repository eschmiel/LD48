// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_CropType
#include <CropType.h>
#endif

::CropType CropType_obj::CARROT;

::CropType CropType_obj::TURNIP;

bool CropType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CARROT",83,de,66,6d)) { outValue = CropType_obj::CARROT; return true; }
	if (inName==HX_("TURNIP",a4,8c,78,bd)) { outValue = CropType_obj::TURNIP; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(CropType_obj)

int CropType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("CARROT",83,de,66,6d)) return 1;
	if (inName==HX_("TURNIP",a4,8c,78,bd)) return 0;
	return super::__FindIndex(inName);
}

int CropType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("CARROT",83,de,66,6d)) return 0;
	if (inName==HX_("TURNIP",a4,8c,78,bd)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val CropType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CARROT",83,de,66,6d)) return CARROT;
	if (inName==HX_("TURNIP",a4,8c,78,bd)) return TURNIP;
	return super::__Field(inName,inCallProp);
}

static ::String CropType_obj_sStaticFields[] = {
	HX_("TURNIP",a4,8c,78,bd),
	HX_("CARROT",83,de,66,6d),
	::String(null())
};

::hx::Class CropType_obj::__mClass;

Dynamic __Create_CropType_obj() { return new CropType_obj; }

void CropType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("CropType",8a,e4,22,93), ::hx::TCanCast< CropType_obj >,CropType_obj_sStaticFields,0,
	&__Create_CropType_obj, &__Create,
	&super::__SGetClass(), &CreateCropType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &CropType_obj::__GetStatic;
}

void CropType_obj::__boot()
{
CARROT = ::hx::CreateConstEnum< CropType_obj >(HX_("CARROT",83,de,66,6d),1);
TURNIP = ::hx::CreateConstEnum< CropType_obj >(HX_("TURNIP",a4,8c,78,bd),0);
}


