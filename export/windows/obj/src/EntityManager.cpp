// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_EntityManager
#include <EntityManager.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_642a64adc6666e3b_13_getSoil,"EntityManager","getSoil",0x357ebc31,"EntityManager.getSoil","EntityManager.hx",13,0xf55b8f94)
HX_LOCAL_STACK_FRAME(_hx_pos_642a64adc6666e3b_9_boot,"EntityManager","boot",0xab0fe1b6,"EntityManager.boot","EntityManager.hx",9,0xf55b8f94)

void EntityManager_obj::__construct() { }

Dynamic EntityManager_obj::__CreateEmpty() { return new EntityManager_obj; }

void *EntityManager_obj::_hx_vtable = 0;

Dynamic EntityManager_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< EntityManager_obj > _hx_result = new EntityManager_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool EntityManager_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7adc16c6;
}

 ::flixel::group::FlxTypedGroup EntityManager_obj::soil;

 ::flixel::group::FlxTypedGroup EntityManager_obj::getSoil(){
            	HX_STACKFRAME(&_hx_pos_642a64adc6666e3b_13_getSoil)
HXDLIN(  13)		return ::EntityManager_obj::soil;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(EntityManager_obj,getSoil,return )


EntityManager_obj::EntityManager_obj()
{
}

bool EntityManager_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"soil") ) { outValue = ( soil ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getSoil") ) { outValue = getSoil_dyn(); return true; }
	}
	return false;
}

bool EntityManager_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"soil") ) { soil=ioValue.Cast<  ::flixel::group::FlxTypedGroup >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *EntityManager_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo EntityManager_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(void *) &EntityManager_obj::soil,HX_("soil",7f,1f,58,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void EntityManager_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(EntityManager_obj::soil,"soil");
};

#ifdef HXCPP_VISIT_ALLOCS
static void EntityManager_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(EntityManager_obj::soil,"soil");
};

#endif

::hx::Class EntityManager_obj::__mClass;

static ::String EntityManager_obj_sStaticFields[] = {
	HX_("soil",7f,1f,58,4c),
	HX_("getSoil",35,cf,da,1e),
	::String(null())
};

void EntityManager_obj::__register()
{
	EntityManager_obj _hx_dummy;
	EntityManager_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("EntityManager",6a,f1,c4,cf);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &EntityManager_obj::__GetStatic;
	__mClass->mSetStaticField = &EntityManager_obj::__SetStatic;
	__mClass->mMarkFunc = EntityManager_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(EntityManager_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< EntityManager_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = EntityManager_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EntityManager_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EntityManager_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void EntityManager_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_642a64adc6666e3b_9_boot)
HXDLIN(   9)		soil =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
            	}
}

